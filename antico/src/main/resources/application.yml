spring: # 주의할 점은 내용작성시 들여쓰기 내어쓰기시 공백개수를 반드시 꼭 지켜야 한다. 
  profiles: #실행환경(dev(개발),test(테스트),local(로컬),prod(운영))
    active: local 

  datasource-antico: #DB 접속이 1개만 있을 경우
    driver-class-name: oracle.jdbc.OracleDriver
    jdbcUrl: jdbc:oracle:thin:@211.238.142.186:1521:xe
    username: final_orauser1
    password: gclass
    type: com.zaxxer.hikari.HikariDataSource
    hikari: #커넥션풀 
      connection-timeout : 30000 #클라이언트가 pool에 connection을 요청하는데 기다리는 최대시간을 설정 30초
      maximum-pool-size : 10 #최대 커넥션 개수 설정
      max-lifetime: 1800000  #커넥션 풀에서 살아있을 수 있는 커넥션의 최대 수명시간 1,800초(30분)

  # mongodb+srv://final_mongouser1:gclass@clusterantico.ihfo0.mongodb.net/?retryWrites=true&w=majority&appName=ClusterAntico
  data:
    mongodb:
      uri: ENC(0sX0JRnyjrndUJBkloJnMwHkzLVPaKnUH/+jdaqPTVN6VHyvvJdRpTdLrY7SKoGqiAmAbNh0rkCGdbGlV09mxgHBKqHWAku4c6LkeFTzmW8creJJ8k1JVw1+H0pTCxbeqN+wHGXwU1UJ3vGVY8/FVtvyjD0TGYkZAUsV/WAwOHc7XMz0vrh4EA==)
      
  messages: #메시지(파일이 여러개일 경우 ,로 구분)
    basename: messages.validation
    encoding: UTF-8

  devtools: #View reload
    livereload:
      enabled: true

    restart: #컨트롤러, 모델단이 바뀌었을 때 프로젝트 재시작(reload)
      enabled: true #재시작(reload) 함

  servlet:
    multipart:
      max-file-size: 10MB     # 파일 업로드 용량제한 설정하기. 기본값은 (1MB)
      max-request-size: 12MB  # 파일 및 파일을 제외한 input 태그값 업로드 용량제한 설정하기. (1MB)


mybatis: #mybatis 설정
  configuration:
    map-underscore-to-camel-case: true  
  #type-aliases-package: com.spring.app.**.domain 
  #mapper-locations: com/spring/app/**/mapper/*.xml   #src/main/java 아래 패키지속에 매퍼파일을 만드는 경우 
  mapper-locations: mybatis/mapper/**/*.xml          #src/main/resources 아래 폴더속에 매퍼파일을 만드는 경우
logging: #로그 지정
  level:
    #root: error
    '[com.spring.board]': debug 
    #com.zaxxer.hikari.HikariConfig: DEBUG
    #com.zaxxer.hikari: TRACE 

server:
  port: 80
  servlet:
    context-path: /antico   
    encoding:
      charset: UTF-8
      enabled: true #http 인코딩 지원을 활성화할지 여부
      force: true #post 방식으로 전송했을때 한글데이터가 안깨지도록 함.

# Jasypt 암호화 설정
jasypt:
  encryptor:
    bean: jasyptEncryptor
    password : ${JASYPT_ENCRYPTOR_PASSWORD}

# aws s3 설정
cloud:
  aws:
    s3:
      bucket: antico-uploads-files
      stack.auto: false
    region.static: ap-northeast-2
    credentials:
      accessKey: ENC(bvAkCaRASAQvgnrGC808ZQulHHVIGuveSHlqFmtXGLM=)
      secretKey: ENC(uZP25eC9J9oLHqiOV5/GjNcrHRL7yA8mrrZ3sGTwxJMDYg44Gh/LkJ8fHBp+k4xY6IOx/gdp/zk=)

# kakao 공유하기 api
kakao:
  apikey: ENC(cb7pRmtUMOz1N4am9q3VZmZI8sh+20ladaa2nbrS5m44SfdPtB6o1PNoDU4bNUzh)

# 포인트 충전하기 api
pointcharge:
  chargekey: ENC(5kDANTybdoAQAvmPxAVioZZy60aWlvGu)


  security:
    oauth2:
      client:
        registration:
          #google:
            #client-id: # 발급 받은 Client ID
            #client-secret: # 발급 받은 Client Secret
            #scope: # 기본 값 openid,profile,email => profile, email 로 설정 변경
              #- profile
              #- email

          #naver:
              #client-id: # 발급 받은 Client ID
              #client-secret: # 발급 받은 Client Secret
              #client-authentication-method: client_secret_post
              #authorization-grant-type: authorization_code
              #redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
              #scope:
              #name
              #email
              #profile_image
              #client-name: Naver

          kakao:
            client-id: 2fc45348c1f277afbb09c75d902df014
            client-secret: Pd7oRChK002kd9Vm64ejNDEtiXBlwZr1
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
              - name
              - profile_nickname
              - profile_image
              - account_email
            redirect-uri: "http://localhost:8080/antico/kakaologin/callback"
            client-name: kakao

        provider:
          #naver:
            #authorization-uri: https://nid.naver.com/oauth2.0/authorize
            #token-uri: https://nid.naver.com/oauth2.0/token
            #user-info-uri: https://openapi.naver.com/v1/nid/me
            #user-info-authentication-method: header
            #user-name-attribute: response # Naver 응답 값 resultCode, message, response 중 response 지정


          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정